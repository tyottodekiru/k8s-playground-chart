apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-playground.fullname" . }}-redis
  labels:
    {{- include "k8s-playground.labels" . | nindent 4 }}
    component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8s-playground.selectorLabels" . | nindent 6 }}
      component: redis
  template:
    metadata:
      labels:
        {{- include "k8s-playground.selectorLabels" . | nindent 8 }}
        component: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.controlPlane.infrastructure.redis.image.repository }}:{{ .Values.controlPlane.infrastructure.redis.image.tag }}"
          imagePullPolicy: {{ .Values.controlPlane.infrastructure.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          command:
            - redis-server
            - --appendonly
            - "yes"
            - --appendfsync
            - everysec
            - --save
            - "900 1"
            - --save
            - "300 10"
            - --save
            - "60 10000"
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.controlPlane.infrastructure.redis.resources | nindent 12 }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          {{- if .Values.controlPlane.infrastructure.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "k8s-playground.fullname" . }}-redis-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
